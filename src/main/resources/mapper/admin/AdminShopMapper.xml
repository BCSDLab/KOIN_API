<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="koreatech.in.repository.admin.AdminShopMapper">
    <select id="getShopCategoryByName" parameterType="string" resultType="koreatech.in.domain.Shop.ShopCategory">
        SELECT *
        FROM `koin`.`shop_categories`
        WHERE
            `name` = #{name}
            AND `is_deleted` = 0
    </select>

    <insert id="createShopCategory" parameterType="koreatech.in.domain.Shop.ShopCategory" keyProperty="id">
        INSERT INTO `koin`.`shop_categories` (
            `name`,
            `image_url`
        )
        VALUES (
            #{shopCategory.name},
            #{shopCategory.image_url}
        )
    </insert>

    <select id="getShopCategoryById" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopCategory">
        SELECT *
        FROM `shop_categories`
        WHERE
            `id` = #{id}
            AND `is_deleted` = 0
    </select>

    <select id="getTotalCountOfShopCategoriesByCondition" parameterType="koreatech.in.dto.admin.shop.request.ShopCategoriesCondition" resultType="integer">
        SELECT COUNT(*)
        FROM `koin`.`shop_categories`
        WHERE
            `is_deleted` = 0

        <!-- 검색 -->
        <if test="condition.query != null">
            <trim prefix="AND">
                <if test='condition.searchType.name().equals("NAME")'> REPLACE(`name`, ' ', '') </if>
                LIKE CONCAT('%', REPLACE(#{condition.query}, ' ', ''), '%')
            </trim>
        </if>
    </select>

    <select id="getShopCategoriesByCondition" parameterType="koreatech.in.dto.admin.shop.request.ShopCategoriesCondition" resultType="koreatech.in.domain.Shop.ShopCategory">
        SELECT *
        FROM `koin`.`shop_categories`
        WHERE
            `is_deleted` = 0

        <!-- 검색 -->
        <if test="condition.query != null">
            <trim prefix="AND">
                <if test='condition.searchType.name().equals("NAME")'> REPLACE(`name`, ' ', '') </if>
                LIKE CONCAT('%', REPLACE(#{condition.query}, ' ', ''), '%')
            </trim>
        </if>

        <!-- 정렬 -->
        <if test="condition.sort != null">
            <trim prefix="ORDER BY">
                <if test='condition.sort.name().equals("NAME_ASC")'> `name` ASC </if>
                <if test='condition.sort.name().equals("NAME_DESC")'> `name` DESC </if>
                <if test='condition.sort.name().equals("CREATED_AT_ASC")'> `created_at` ASC </if>
                <if test='condition.sort.name().equals("CREATED_AT_DESC")'> `created_at` DESC </if>
            </trim>
        </if>

        LIMIT #{begin}, #{condition.limit}
    </select>

    <update id="updateShopCategory" parameterType="koreatech.in.domain.Shop.ShopCategory">
        UPDATE `koin`.`shop_categories`
        SET
            `name` = #{shopCategory.name},
            `image_url` = #{shopCategory.image_url}
        WHERE `id` = #{shopCategory.id}
    </update>

    <select id="getShopsUsingCategoryByShopCategoryId" parameterType="integer" resultType="koreatech.in.domain.Shop.Shop">
        SELECT *
        FROM `koin`.`shops`
        WHERE `id` IN (
            SELECT `shop_id`
            FROM `koin`.`shop_category_map`
            WHERE
                `shop_category_id` = #{shopCategoryId}
        )
    </select>

    <update id="deleteShopCategoryById" parameterType="integer">
        UPDATE `koin`.`shop_categories`
        SET `is_deleted` = 1
        WHERE `id` = #{id}
    </update>

    <insert id="createShop" parameterType="koreatech.in.domain.Shop.Shop" useGeneratedKeys="true" keyProperty="shop.id">
        INSERT INTO `koin`.`shops` (
            `name`,
            `internal_name`,
            `chosung`,
            `phone`,
            `address`,
            `description`,
            `delivery`,
            `delivery_price`,
            `pay_card`,
            `pay_bank`
        )
        VALUES (
            #{shop.name},
            #{shop.internal_name},
            #{shop.chosung},
            #{shop.phone},
            #{shop.address},
            #{shop.description},
            #{shop.delivery},
            #{shop.delivery_price},
            #{shop.pay_card},
            #{shop.pay_bank}
        )
    </insert>

    <insert id="createShopOpens" parameterType="list">
        INSERT INTO `koin`.`shop_opens` (
            `shop_id`,
            `day_of_week`,
            `closed`,
            `open_time`,
            `close_time`
        )
        VALUES
        <foreach collection="shopOpens" item="item" separator=",">
            <choose>
                <when test="item.closed">
                    (
                        #{item.shop_id},
                        #{item.day_of_week},
                        #{item.closed},
                        null,
                        null
                    )
                </when>
                <otherwise>
                    (
                        #{item.shop_id},
                        #{item.day_of_week},
                        #{item.closed},
                        #{item.open_time},
                        #{item.close_time}
                    )
                </otherwise>
            </choose>
        </foreach>
    </insert>

    <insert id="createShopCategoryMaps" parameterType="list">
        INSERT IGNORE INTO `koin`.`shop_category_map` (
            `shop_id`,
            `shop_category_id`
        )
        VALUES
        <foreach collection="shopCategoryMaps" item="item" separator=",">
            (
                #{item.shop_id},
                #{item.shop_category_id}
            )
        </foreach>
    </insert>

    <insert id="createMenuCategories" parameterType="list">
        INSERT INTO `koin`.`shop_menu_categories` (
            `shop_id`,
            `name`
        )
        VALUES
        <foreach collection="menuCategories" item="item" separator=",">
            (
                #{item.shop_id},
                #{item.name}
            )
        </foreach>
    </insert>

    <insert id="createShopImages" parameterType="list">
        INSERT IGNORE INTO `koin`.`shop_images` (
            `shop_id`,
            `image_url`
        )
        VALUES
        <foreach collection="shopImages" item="item" separator=",">
            (
                #{item.shop_id},
                #{item.image_url}
            )
        </foreach>
    </insert>

    <select id="getShopProfileByShopId" parameterType="integer" resultMap="ShopProfile">
        SELECT
            # shops
            `t1`.`id` AS `shops.id`,
            `t1`.`name` AS `shops.name`,
            `t1`.`phone` AS `shops.phone`,
            `t1`.`address` AS `shops.address`,
            `t1`.`description` AS `shops.description`,
            `t1`.`delivery` AS `shops.delivery`,
            `t1`.`delivery_price` AS `shops.delivery_price`,
            `t1`.`pay_card` AS `shops.pay_card`,
            `t1`.`pay_bank` AS `shops.pay_bank`,
            `t1`.`is_deleted` AS `shops.is_deleted`,
            `t1`.`updated_at` AS `shops.updated_at`,

            # shop_opens
            `t2`.`day_of_week` AS `shop_opens.day_of_week`,
            `t2`.`closed` AS `shop_opens.closed`,
            `t2`.`open_time` AS `shop_opens.open_time`,
            `t2`.`close_time` AS `shop_opens.close_time`,
            `t2`.`updated_at` AS `shop_opens.updated_at`,

            # shop_images
            `t3`.`image_url` AS `shop_images.image_url`,
            `t3`.`updated_at` AS `shop_images.updated_at`,

            # shop_menu_categories
            `t4`.`id` AS `shop_menu_categories.id`,
            `t4`.`name` AS `shop_menu_categories.name`,
            `t4`.`updated_at` AS `shop_menu_categories.updated_at`,

            # shop_categories
            `t6`.`id` AS `shop_categories.id`,
            `t6`.`name` AS `shop_categories.name`,
            `t6`.`updated_at` AS `shop_categories.updated_at`

        FROM (
            # shops
            SELECT *
            FROM `koin`.`shops`
            WHERE `id` = #{shopId}
        ) `t1`

            # shops : shop_opens (1:N)
            LEFT JOIN `koin`.`shop_opens` `t2`
            ON
                `t1`.`id` = `t2`.`shop_id`
                AND `t2`.`is_deleted` = 0

            # shops : shop_images (1:N)
            LEFT JOIN `koin`.`shop_images` `t3`
            ON
                `t1`.`id` = `t3`.`shop_id`

            # shops : shop_menu_categories (1:N)
            LEFT JOIN `koin`.`shop_menu_categories` `t4`
            ON
                `t1`.`id` = `t4`.`shop_id`
                AND `t4`.`is_deleted` = 0

            # relation table between shops and shop_categories
            LEFT JOIN `koin`.`shop_category_map` `t5`
            ON
                `t1`.`id` = `t5`.`shop_id`

            # shops : shop_categories (N:M)
            LEFT JOIN `koin`.`shop_categories` `t6`
            ON
                `t5`.`shop_category_id` = `t6`.`id`
                AND `t6`.`is_deleted` = 0
    </select>

    <select id="getTotalCountOfShopsByCondition" parameterType="koreatech.in.dto.admin.shop.request.ShopsCondition" resultType="integer">
        SELECT COUNT(*)
        FROM `koin`.`shops`

        <trim prefix="WHERE" prefixOverrides="AND">
            <!-- 검색 -->
            <if test="condition.query != null">
                <trim prefix="AND">
                    <if test='condition.searchType.name().equals("NAME")'> `internal_name` </if>
                    LIKE CONCAT('%', REPLACE(#{condition.query}, ' ', ''), '%')
                </trim>
            </if>

            <!-- 삭제 여부 -->
            <if test="condition.is_deleted != null">
                <trim prefix="AND">
                    <choose>
                        <when test="condition.is_deleted.equals(true)"> `is_deleted` = 1 </when>
                        <otherwise> `is_deleted` = 0 </otherwise>
                    </choose>
                </trim>
            </if>

            <!-- 카테고리 -->
            <if test="condition.category_id != null">
                <trim prefix="AND">
                    `id` IN (
                        SELECT `shop_id`
                        FROM `koin`.`shop_category_map`
                        WHERE `shop_category_id` = #{condition.category_id}
                    )
                </trim>
            </if>
        </trim>
    </select>

    <select id="getShopProfilesByCondition" resultMap="ShopProfile">
        SELECT
            # shops
            `t1`.`id` AS `shops.id`,
            `t1`.`name` AS `shops.name`,
            `t1`.`phone` AS `shops.phone`,
            `t1`.`address` AS `shops.address`,
            `t1`.`description` AS `shops.description`,
            `t1`.`delivery` AS `shops.delivery`,
            `t1`.`delivery_price` AS `shops.delivery_price`,
            `t1`.`pay_card` AS `shops.pay_card`,
            `t1`.`pay_bank` AS `shops.pay_bank`,
            `t1`.`is_deleted` AS `shops.is_deleted`,

            # shop_opens
            `t2`.`day_of_week` AS `shop_opens.day_of_week`,
            `t2`.`closed` AS `shop_opens.closed`,
            `t2`.`open_time` AS `shop_opens.open_time`,
            `t2`.`close_time` AS `shop_opens.close_time`,

            # shop_images
            `t3`.`image_url` AS `shop_images.image_url`,

            # shop_menu_categories
            `t4`.`id` AS `shop_menu_categories.id`,
            `t4`.`name` AS `shop_menu_categories.name`,

            # shop_categories
            `t6`.`id` AS `shop_categories.id`,
            `t6`.`name` AS `shop_categories.name`

        FROM (
            SELECT *
            FROM `koin`.`shops`

            <trim prefix="WHERE" prefixOverrides="AND">
                <!-- 검색 -->
                <if test="condition.query != null">
                    <trim prefix="AND">
                        <if test='condition.searchType.name().equals("NAME")'> `internal_name` </if>
                        LIKE CONCAT('%', REPLACE(#{condition.query}, ' ', ''), '%')
                    </trim>
                </if>

                <!-- 삭제 여부 -->
                <if test="condition.is_deleted != null">
                    <trim prefix="AND">
                        <choose>
                            <when test="condition.is_deleted.equals(true)"> `is_deleted` = 1 </when>
                            <otherwise> `is_deleted` = 0 </otherwise>
                        </choose>
                    </trim>
                </if>

                <!-- 카테고리 -->
                <if test="condition.category_id != null">
                    <trim prefix="AND">
                        `id` IN (
                            SELECT `shop_id`
                            FROM `koin`.`shop_category_map`
                            WHERE `shop_category_id` = #{condition.category_id}
                        )
                    </trim>
                </if>
            </trim>

            <if test="condition.sort != null">
                <trim prefix="ORDER BY">
                    <if test='condition.sort.name().equals("NAME_ASC")'> `name` ASC </if>
                    <if test='condition.sort.name().equals("NAME_DESC")'> `name` DESC </if>
                    <if test='condition.sort.name().equals("CREATED_AT_ASC")'> `created_at` ASC </if>
                    <if test='condition.sort.name().equals("CREATED_AT_DESC")'> `created_at` DESC </if>
                </trim>
            </if>

            LIMIT #{begin}, #{condition.limit}
        ) `t1`

            # shops : shop_opens (1:N)
            LEFT JOIN `koin`.`shop_opens` `t2`
            ON
                `t1`.`id` = `t2`.`shop_id`
                AND `t2`.`is_deleted` = 0

            # shops : shop_images (1:N)
            LEFT JOIN `koin`.`shop_images` `t3`
            ON
                `t1`.`id` = `t3`.`shop_id`

            # shops : shop_menu_categories (1:N)
            LEFT JOIN `koin`.`shop_menu_categories` `t4`
            ON
                `t1`.`id` = `t4`.`shop_id`
                AND `t4`.`is_deleted` = 0

            # relation table between shops and shop_categories
            LEFT JOIN `koin`.`shop_category_map` `t5`
            ON
                `t1`.`id` = `t5`.`shop_id`

            # shops : shop_categories (N:M)
            LEFT JOIN `koin`.`shop_categories` `t6`
            ON
                `t5`.`shop_category_id` = `t6`.`id`
                AND `t6`.`is_deleted` = 0
    </select>

    <update id="updateShop" parameterType="koreatech.in.domain.Shop.Shop">
        UPDATE `koin`.`shops`
        SET
            `name` = #{shop.name},
            `internal_name` = #{shop.internal_name},
            `chosung` = #{shop.chosung},
            `phone` = #{shop.phone},
            `address` = #{shop.address},
            `description` = #{shop.description},
            `delivery` = #{shop.delivery},
            `delivery_price` = #{shop.delivery_price},
            `pay_card` = #{shop.pay_card},
            `pay_bank` = #{shop.pay_bank}
        WHERE
            `id` = #{shop.id}
    </update>

    <update id="updateShopOpens" parameterType="list">
        <foreach collection="shopOpens" item="item" separator=";">
            UPDATE `koin`.`shop_opens`
            SET
                `closed` = #{item.closed},
            <choose>
                <when test="item.closed">
                    `open_time` = null,
                    `close_time` = null
                </when>
                <otherwise>
                    `open_time` = #{item.open_time},
                    `close_time` = #{item.close_time}
                </otherwise>
            </choose>
            WHERE
                `shop_id` = #{item.shop_id}
                AND `day_of_week` = #{item.day_of_week}
                AND `is_deleted` = 0
        </foreach>
    </update>

    <select id="getShopCategoryMapsByShopId" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopCategoryMap">
        SELECT *
        FROM `koin`.`shop_category_map`
        WHERE `shop_id` = #{shopId}
    </select>

    <select id="getShopImagesByShopId" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopImage">
        SELECT *
        FROM `koin`.`shop_images`
        WHERE `shop_id` = #{shopId}
    </select>

    <select id="getMenuCategoryMapsByMenuId" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopMenuCategoryMap">
        SELECT *
        FROM `koin`.`shop_menu_category_map`
        WHERE `shop_menu_id` = #{menuId}
    </select>

    <delete id="deleteMenuCategoryMaps" parameterType="list">
        <foreach collection="menuCategoryMaps" item="item" separator=";">
            DELETE
            FROM `koin`.`shop_menu_category_map`
            WHERE `id` = #{item.id}
        </foreach>
    </delete>

    <select id="getMenuImagesByMenuId" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopMenuImage">
        SELECT *
        FROM `koin`.`shop_menu_images`
        WHERE `shop_menu_id` = #{menuId}
    </select>

    <delete id="deleteMenuImages" parameterType="list">
        <foreach collection="menuImages" item="item" separator=";">
            DELETE
            FROM `koin`.`shop_menu_images`
            WHERE `id` = #{item.id}
        </foreach>
    </delete>

    <update id="deleteShopById" parameterType="integer">
        UPDATE `koin`.`shops`
        SET `is_deleted` = 1
        WHERE `id` = #{id}
    </update>

    <update id="undeleteShopById" parameterType="integer">
        UPDATE `koin`.`shops`
        SET `is_deleted` = 0
        WHERE `id` = #{id}
    </update>

    <select id="getShopById" parameterType="integer" resultType="koreatech.in.domain.Shop.Shop">
        SELECT *
        FROM `koin`.`shops`
        WHERE `id` = #{id}
    </select>

    <select id="getMenuCategoryByShopIdAndName" resultType="koreatech.in.domain.Shop.ShopMenuCategory">
        SELECT *
        FROM `koin`.`shop_menu_categories`
        WHERE
            `shop_id` = #{shopId}
            AND `name` = #{name}
            AND `is_deleted` = 0
    </select>

    <select id="getCountOfMenuCategoriesByShopId" resultType="integer">
        SELECT COUNT(*)
        FROM `koin`.`shop_menu_categories`
        WHERE
            `shop_id` = #{shopId}
            AND `is_deleted` = 0
    </select>

    <insert id="createMenuCategory" parameterType="koreatech.in.domain.Shop.ShopMenuCategory" keyProperty="id">
        INSERT INTO `koin`.`shop_menu_categories` (
            `shop_id`,
            `name`
        )
        VALUES (
            #{menuCategory.shop_id},
            #{menuCategory.name}
        )
    </insert>

    <select id="getMenuCategoriesByShopId" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopMenuCategory">
        SELECT *
        FROM `koin`.`shop_menu_categories`
        WHERE
            `shop_id` = #{shopId}
            AND `is_deleted` = 0
    </select>

    <select id="getMenuCategoryById" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopMenuCategory">
        SELECT *
        FROM `koin`.`shop_menu_categories`
        WHERE
            `id` = #{id}
            AND `is_deleted` = 0
    </select>

    <select id="getMenusUsingCategoryByMenuCategoryId" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopMenu">
        SELECT *
        FROM `koin`.`shop_menus`
        WHERE
            `id` IN (
                SELECT `shop_menu_id`
                FROM `koin`.`shop_menu_category_map`
                WHERE
                    `shop_menu_category_id` = #{menuCategoryId}
            )
            AND `is_deleted` = 0
    </select>

    <update id="deleteMenuCategoryById" parameterType="integer">
        UPDATE `koin`.`shop_menu_categories`
        SET `is_deleted` = 1
        WHERE `id` = #{id}
    </update>

    <insert id="createMenu" parameterType="koreatech.in.domain.Shop.ShopMenu" useGeneratedKeys="true" keyProperty="menu.id">
        INSERT INTO `koin`.`shop_menus` (
            `shop_id`,
            `name`,
            `description`,
            `is_hidden`
        )
        VALUES (
            #{menu.shop_id},
            #{menu.name},
            #{menu.description},
            #{menu.is_hidden}
        )
    </insert>

    <insert id="createMenuDetail" parameterType="koreatech.in.domain.Shop.ShopMenuDetail" useGeneratedKeys="true" keyProperty="menuDetail.id">
        INSERT IGNORE INTO `koin`.`shop_menu_details` (
            `shop_menu_id`,
            `option`,
            `price`
        )
        VALUES (
            #{menuDetail.shop_menu_id},
            #{menuDetail.option},
            #{menuDetail.price}
        )
    </insert>

    <insert id="createMenuDetails" parameterType="list">
        INSERT IGNORE INTO `koin`.`shop_menu_details` (
            `shop_menu_id`,
            `option`,
            `price`
        )
        VALUES
        <foreach collection="menuDetails" item="item" separator=",">
            (
                #{item.shop_menu_id},
                #{item.option},
                #{item.price}
            )
        </foreach>
    </insert>

    <insert id="createMenuCategoryMaps" parameterType="list">
        INSERT IGNORE INTO `koin`.`shop_menu_category_map` (
            `shop_menu_id`,
            `shop_menu_category_id`
        )
        VALUES
        <foreach collection="menuCategoryMaps" item="item" separator=",">
            (
                #{item.shop_menu_id},
                #{item.shop_menu_category_id}
            )
        </foreach>
    </insert>


    <insert id="createMenuImages" parameterType="list">
        INSERT IGNORE INTO `koin`.`shop_menu_images` (
            `shop_menu_id`,
            `image_url`
        )
        VALUES
        <foreach collection="menuImages" item="item" separator=",">
            (
                #{item.shop_menu_id},
                #{item.image_url}
            )
        </foreach>
    </insert>

    <select id="getMenuProfileByMenuId" parameterType="integer" resultMap="ShopMenuProfile">
        SELECT
            # shop_menus
            `t1`.`id` AS `shop_menus.id`,
            `t1`.`shop_id` AS `shop_menus.shop_id`,
            `t1`.`name` AS `shop_menus.name`,
            `t1`.`is_hidden` AS `shop_menus.is_hidden`,
            `t1`.`description` AS `shop_menus.description`,

            # shop_menu_details
            `t2`.`option` AS `shop_menu_details.option`,
            `t2`.`price` AS `shop_menu_details.price`,

            # shop_menu_images
            `t3`.`image_url` AS `shop_menu_images.image_url`,

            # shop_menu_categories
            `t5`.`id` AS `shop_menu_categories.id`

        FROM (
            # shop_menus
            SELECT *
            FROM `koin`.`shop_menus`
            WHERE
                `id` = #{menuId}
                AND `is_deleted` = 0
        ) t1

            # shop_menus : shop_menu_details (1:N)
            LEFT JOIN `koin`.`shop_menu_details` `t2`
            ON
                `t1`.`id` = `t2`.`shop_menu_id`

            # shop_menus : shop_menu_images (1:N)
            LEFT JOIN `koin`.`shop_menu_images` `t3`
            ON
                `t1`.`id` = `t3`.`shop_menu_id`

            # relation table between shop_menus and shop_menu_categories
            LEFT JOIN `koin`.`shop_menu_category_map` `t4`
            ON
                `t1`.`id` = `t4`.`shop_menu_id`

            # shop_menus : shop_menu_categories (N:M)
            LEFT JOIN `koin`.`shop_menu_categories` `t5`
            ON
                `t4`.`shop_menu_category_id` = `t5`.`id`
                AND `t5`.`is_deleted` = 0
    </select>

    <select id="getMenuProfilesByShopId" parameterType="integer" resultMap="ShopMenuProfile">
        SELECT
        # shop_menus
        `t1`.`id` AS `shop_menus.id`,
        `t1`.`shop_id` AS `shop_menus.shop_id`,
        `t1`.`name` AS `shop_menus.name`,
        `t1`.`is_hidden` AS `shop_menus.is_hidden`,
        `t1`.`description` AS `shop_menus.description`,

        # shop_menu_details
        `t2`.`option` AS `shop_menu_details.option`,
        `t2`.`price` AS `shop_menu_details.price`,

        # shop_menu_images
        `t3`.`image_url` AS `shop_menu_images.image_url`,

        # shop_menu_categories
        `t5`.`id` AS `shop_menu_categories.id`

        FROM (
            # shop_menus
            SELECT *
            FROM `koin`.`shop_menus`
            WHERE
                `shop_id` = #{shopId}
                AND `is_deleted` = 0
        ) t1

            # shop_menus : shop_menu_details (1:N)
            LEFT JOIN `koin`.`shop_menu_details` `t2`
            ON
                `t1`.`id` = `t2`.`shop_menu_id`

            # shop_menus : shop_menu_images (1:N)
            LEFT JOIN `koin`.`shop_menu_images` `t3`
            ON
                `t1`.`id` = `t3`.`shop_menu_id`

            # relation table between shop_menus and shop_menu_categories
            LEFT JOIN `koin`.`shop_menu_category_map` `t4`
            ON
                `t1`.`id` = `t4`.`shop_menu_id`

            # shop_menus : shop_menu_categories (N:M)
            LEFT JOIN `koin`.`shop_menu_categories` `t5`
            ON
                `t4`.`shop_menu_category_id` = `t5`.`id`
                AND `t5`.`is_deleted` = 0
    </select>

    <select id="getMenuById" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopMenu">
        SELECT *
        FROM `koin`.`shop_menus`
        WHERE
            `id` = #{id}
            AND `is_deleted` = 0
    </select>

    <update id="updateMenu" parameterType="koreatech.in.domain.Shop.ShopMenu">
        UPDATE `koin`.`shop_menus`
        SET
            `name` = #{menu.name},
            `description` = #{menu.description}
        WHERE `id` = #{menu.id}
    </update>

    <select id="getMenuDetailsByMenuId" parameterType="integer" resultType="koreatech.in.domain.Shop.ShopMenuDetail">
        SELECT *
        FROM `koin`.`shop_menu_details`
        WHERE
            `shop_menu_id` = #{menuId}
    </select>

    <update id="deleteMenuDetails" parameterType="list">
        <foreach collection="menuDetails" item="item" separator=";">
            DELETE
            FROM `koin`.`shop_menu_details`
            WHERE `id` = #{item.id}
        </foreach>
    </update>

    <update id="deleteMenuDetailsByMenuId" parameterType="integer">
        DELETE
        FROM `koin`.`shop_menu_details`
        WHERE `shop_menu_id` = #{menuId}
    </update>

    <update id="deleteMenuById" parameterType="integer">
        UPDATE `koin`.`shop_menus`
        SET `is_deleted` = 1
        WHERE `id` = #{menuId}
    </update>

    <delete id="deleteAllInformationRelatedToMenuByMenuId">
        DELETE
        FROM `koin`.`shop_menu_details`
        WHERE `shop_menu_id` = #{menuId};

        DELETE
        FROM `koin`.`shop_menu_images`
        WHERE `shop_menu_id` = #{menuId};

        DELETE
        FROM `koin`.`shop_menu_category_map`
        WHERE `shop_menu_id` = #{menuId};
    </delete>

    <update id="hideMenuById" parameterType="integer">
        UPDATE `koin`.`shop_menus`
        SET `is_hidden` = 1
        WHERE `id` = #{menuId}
    </update>

    <update id="revealMenuById" parameterType="integer">
        UPDATE `koin`.`shop_menus`
        SET `is_hidden` = 0
        WHERE `id` = #{menuId}
    </update>

    <delete id="deleteShopCategoryMaps" parameterType="list">
        <foreach collection="shopCategoryMaps" item="item" separator=";">
            DELETE
            FROM `koin`.`shop_category_map`
            WHERE `id` = #{item.id}
        </foreach>
    </delete>

    <delete id="deleteShopImages" parameterType="list">
        <foreach collection="shopImages" item="item" separator=";">
            DELETE
            FROM `koin`.`shop_images`
            WHERE `id` = #{item.id}
        </foreach>
    </delete>

    <resultMap id="ShopProfile" type="koreatech.in.domain.Shop.ShopProfile">
        <id property="id" column="shops.id"/>
        <result property="name" column="shops.name"/>
        <result property="phone" column="shops.phone"/>
        <result property="address" column="shops.address"/>
        <result property="description" column="shops.description"/>
        <result property="delivery" column="shops.delivery"/>
        <result property="delivery_price" column="shops.delivery_price"/>
        <result property="pay_card" column="shops.pay_card"/>
        <result property="pay_bank" column="shops.pay_bank"/>
        <result property="is_deleted" column="shops.is_deleted"/>
        <result property="updated_at" column="shops.updated_at"/>

        <collection property="open" javaType="list" ofType="koreatech.in.domain.Shop.ShopProfile$Open">
            <result property="day_of_week" column="shop_opens.day_of_week" />
            <result property="closed" column="shop_opens.closed"/>
            <result property="open_time" column="shop_opens.open_time" />
            <result property="close_time" column="shop_opens.close_time"/>
            <result property="updated_at" column="shop_opens.updated_at"/>
        </collection>

        <collection property="image_urls" javaType="list" ofType="string">
            <result property="image_url" column="shop_images.image_url"/>
            <result property="updated_at" column="shop_images.updated_at"/>
        </collection>

        <collection property="menu_categories" javaType="list" ofType="koreatech.in.domain.Shop.ShopProfile$MenuCategory">
            <id property="id" column="shop_menu_categories.id"/>
            <result property="name" column="shop_menu_categories.name"/>
            <result property="updated_at" column="shop_menu_categories.updated_at"/>
        </collection>

        <collection property="shop_categories" javaType="list" ofType="koreatech.in.domain.Shop.ShopProfile$ShopCategory">
            <id property="id" column="shop_categories.id"/>
            <result property="name" column="shop_categories.name"/>
            <result property="updated_at" column="shop_categories.updated_at"/>
        </collection>
    </resultMap>

    <resultMap id="ShopMenuProfile" type="koreatech.in.domain.Shop.ShopMenuProfile">
        <id property="id" column="shop_menus.id"/>
        <result property="shop_id" column="shop_menus.shop_id"/>
        <result property="name" column="shop_menus.name"/>
        <result property="is_hidden" column="shop_menus.is_hidden"/>
        <result property="description" column="shop_menus.description"/>

        <collection property="option_prices" javaType="list" ofType="koreatech.in.domain.Shop.ShopMenuProfile$OptionPrice">
            <result property="option" column="shop_menu_details.option"/>
            <result property="price" column="shop_menu_details.price"/>
        </collection>

        <collection property="image_urls" javaType="list" ofType="string">
            <result property="image_url" column="shop_menu_images.image_url"/>
        </collection>

        <collection property="category_ids" javaType="list" ofType="integer">
            <id property="id" column="shop_menu_categories.id"/>
        </collection>
    </resultMap>
</mapper>