<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="koreatech.in.repository.ShopMapper">
    <resultMap id="ResponseMenu" type="koreatech.in.dto.shop.response.ResponseShopMenuDTO" >
        <id property="id" column="id"/>
        <result property="shop_id" column="shop_id"/>
        <result property="name" column="name"/>
        <result property="is_hidden" column="is_hidden"/>
        <result property="description" column="description"/>
        <collection property="option_prices" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.OptionPrice" select="getOptionPricesByMenuId"/>
        <collection property="category_ids" column="id" javaType="list"
                    ofType="integer" select="getMenuCategoryIdsOfMenuByMenuId"/>
        <collection property="image_urls" column="id" javaType="list"
                    ofType="string" select="getMenuImageUrlsByMenuId"/>
    </resultMap>

    <resultMap id="ResponseMenus" type="koreatech.in.dto.shop.response.ResponseShopMenusDTO">
        <result property="shop_id" column="id"/>
        <result property="shop_name" column="name"/>
        <collection property="menu_categories" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.ShopMenuCategory"
                    select="getMenuCategoriesOfShopByShopId"/>
        <collection property="menus" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.ShopMenu"
                    select="getShopMenusByShopId"/>
    </resultMap>

    <resultMap id="ShopMenu" type="koreatech.in.dto.shop.response.inner.ShopMenu">
        <id property="id" column="id"/>
        <result property="shop_id" column="shop_id"/>
        <result property="name" column="name"/>
        <result property="is_hidden" column="is_hidden"/>
        <result property="description" column="description"/>
        <collection property="option_prices" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.OptionPrice"
                    select="getOptionPricesByMenuId"/>
        <collection property="category_ids" column="id" javaType="list"
                    ofType="integer" select="getMenuCategoryIdsOfMenuByMenuId"/>
        <collection property="image_urls" column="id" javaType="list"
                    ofType="string" select="getMenuImageUrlsByMenuId"/>
    </resultMap>

    <resultMap id="ResponseShop" type="koreatech.in.dto.shop.response.ResponseShopDTO">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="address" column="address"/>
        <result property="description" column="description"/>
        <result property="delivery" column="delivery"/>
        <result property="delivery_price" column="delivery_price"/>
        <result property="pay_card" column="pay_card"/>
        <result property="pay_bank" column="pay_bank"/>
        <result property="is_deleted" column="is_deleted"/>
        <collection property="open" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.Open" select="getShopOpensByShopId"/>
        <collection property="image_urls" column="id" javaType="list"
                    ofType="string" select="getShopImageUrlsByShopId"/>
        <collection property="shop_category_ids" column="id" javaType="list"
                    ofType="integer" select="getShopCategoryIdsByShopId"/>
        <collection property="menu_categories" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.ShopMenuCategory"
                    select="getMenuCategoriesOfShopByShopId"/>
        <collection property="menus" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.ShopMenu"
                    select="getShopMenusByShopId"/>
    </resultMap>

    <resultMap id="shop" type="koreatech.in.dto.shop.response.inner.Shop">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="delivery" column="delivery"/>
        <result property="pay_card" column="pay_card"/>
        <result property="pay_bank" column="pay_bank"/>
        <collection property="open" column="id" javaType="list"
                    ofType="koreatech.in.dto.shop.response.inner.Open" select="getShopOpensByShopId"/>
        <collection property="category_ids" column="id" javaType="list"
                    ofType="integer" select="getShopCategoryIdsByShopId"/>
    </resultMap>

    <resultMap id="MinimizedShop" type="koreatech.in.dto.shop.response.inner.MinimizedShop">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <collection property="category_names" column="id" javaType="list"
                    ofType="string" select="getShopCategoryNamesOfShopByShopId" />
    </resultMap>

    <select id="getResponseMenu" resultMap="ResponseMenu">
        SELECT *
        FROM koin.shop_menus
        WHERE id = #{shop_menu_id} AND is_deleted = 0
    </select>

    <select id="getResponseMenus" resultMap="ResponseMenus">
        SELECT *
        FROM koin.shops
        WHERE id = #{shop_id}
    </select>

    <select id="getResponseShop" resultMap="ResponseShop">
        SELECT *
        FROM koin.shops
        WHERE id = #{shop_id} AND is_deleted = 0
    </select>
    
    <select id="getResponseShopByIgnoreDeletion" resultMap="ResponseShop">
        SELECT *
        FROM koin.shops
        WHERE id = #{shop_id}
    </select>

    <select id="getShops" resultMap="shop">
        SELECT *
        FROM koin.shops
        WHERE is_deleted = 0
        ORDER BY created_at DESC
        LIMIT #{begin}, #{limit}
    </select>

    <select id="getShopsByIgnoreDeletionStatus" resultMap="MinimizedShop">
        SELECT *
        FROM koin.shops
        LIMIT #{begin}, #{limit}
    </select>

    <select id="getAllShops" resultMap="shop">
        SELECT *
        FROM koin.shops
        WHERE is_deleted = 0
    </select>

    <select id="getOptionPricesByMenuId" resultType="koreatech.in.dto.shop.response.inner.OptionPrice">
        SELECT `option`, price
        FROM koin.shop_menu_details
        WHERE shop_menu_id = #{shop_menu_id} AND is_deleted = 0
    </select>

    <select id="getMenuCategoryIdsOfMenuByMenuId" resultType="integer">
        SELECT shop_menu_category_id
        FROM koin.shop_menu_category_map
        WHERE shop_menu_id = #{shop_menu_id} AND is_deleted = 0
        ORDER BY shop_menu_category_id
    </select>

    <select id="getMenuImageUrlsByMenuId" resultType="string">
        SELECT image_url
        FROM koin.shop_menu_images
        WHERE shop_menu_id = #{shop_menu_id} AND is_deleted = 0
    </select>

    <select id="getMenuCategoriesOfShopByShopId"
            resultType="koreatech.in.dto.shop.response.inner.ShopMenuCategory">
        SELECT *
        FROM koin.shop_menu_categories
        WHERE shop_id = #{shop_id} AND is_deleted = 0
    </select>

    <select id="getShopMenusByShopId" resultMap="ShopMenu">
        SELECT *
        FROM koin.shop_menus
        WHERE shop_id = #{shop_id} AND is_deleted = 0
    </select>

    <select id="getShopOpensByShopId" resultType="koreatech.in.dto.shop.response.inner.Open">
        SELECT day_of_week, closed, open_time, close_time
        FROM koin.shop_opens
        WHERE shop_id = #{shop_id} AND is_deleted = 0
    </select>

    <select id="getShopImageUrlsByShopId" resultType="string">
        SELECT image_url
        FROM koin.shop_images
        WHERE shop_id = #{shop_id} AND is_deleted = 0
    </select>

    <select id="getShopCategoryIdsByShopId" resultType="integer">
        SELECT shop_category_id
        FROM koin.shop_category_map
        WHERE shop_id = #{shop_id} AND is_deleted = 0
        ORDER BY shop_category_id
    </select>

    <select id="getShopCategoryNamesOfShopByShopId" resultType="string">
        SELECT `name`
        FROM koin.shop_categories
        WHERE id IN (
            SELECT shop_category_id
            FROM koin.shop_category_map
            WHERE shop_id = #{shop_id} AND is_deleted = 0
        ) AND is_deleted = 0
    </select>

    <update id="deleteAllForInvolvedWithMenu">
        UPDATE (
            koin.shop_menus sm

            LEFT JOIN koin.shop_menu_details smd
            ON sm.id = smd.shop_menu_id

            LEFT JOIN koin.shop_menu_images smi
            ON sm.id = smi.shop_menu_id

            LEFT JOIN koin.shop_menu_category_map smcm
            ON sm.id = smcm.shop_menu_id
        )
        SET
            sm.is_deleted = 1,
            smd.is_deleted = 1,
            smi.is_deleted = 1,
            smcm.is_deleted = 1
        WHERE
            sm.id = #{shop_menu_id}
    </update>

    <insert id="createMenuImages" parameterType="list">
        INSERT INTO koin.shop_menu_images
        (shop_menu_id, image_url)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.shop_menu_id},
                #{item.image_url}
            )
        </foreach>
    </insert>

    <insert id="createMenuDetails" parameterType="list">
        INSERT INTO koin.shop_menu_details
        (shop_menu_id, `option`, price)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.shop_menu_id},
                #{item.option},
                #{item.price}
            )
        </foreach>
    </insert>

    <insert id="createMenuCategoryMaps" parameterType="list">
        INSERT INTO koin.shop_menu_category_map
        (shop_menu_id, shop_menu_category_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.shop_menu_id},
                #{item.shop_menu_category_id}
            )
        </foreach>
    </insert>

    <update id="deleteMenuDetails" parameterType="list">
        <foreach collection="list" item="item" separator=";">
            UPDATE koin.shop_menu_details
            SET is_deleted = 1
            WHERE id = #{item.id}
        </foreach>
    </update>

    <update id="deleteMenuCategoryMaps" parameterType="list">
        <foreach collection="list" item="item" separator=";">
            UPDATE koin.shop_menu_category_map
            SET
                is_deleted = 1
            WHERE
                shop_menu_id = #{item.shop_menu_id}
                AND shop_menu_category_id = #{item.shop_menu_category_id}
                AND is_deleted = 0
        </foreach>
    </update>

    <insert id="createShopOpens" parameterType="list">
        INSERT INTO koin.shop_opens
        (shop_id, day_of_week, closed, open_time, close_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.shop_id},
                #{item.day_of_week},
                #{item.closed},
                #{item.open_time},
                #{item.close_time}
            )
        </foreach>
    </insert>

    <insert id="createShopCategoryMaps" parameterType="list">
        INSERT INTO koin.shop_category_map
        (shop_id, shop_category_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.shop_id},
                #{item.shop_category_id}
            )
        </foreach>
    </insert>

    <insert id="createMenuCategories" parameterType="list">
        INSERT INTO koin.shop_menu_categories
        (shop_id, `name`)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.shop_id},
                #{item.name}
            )
        </foreach>
    </insert>

    <update id="updateShopOpens" parameterType="list">
        <foreach collection="list" item="item" separator=";">
            UPDATE koin.shop_opens
            SET
                closed = #{item.closed},
                <choose>
                    <when test="item.closed">
                        open_time = null,
                        close_time = null
                    </when>
                    <otherwise>
                        open_time = #{item.open_time},
                        close_time = #{item.close_time}
                    </otherwise>
                </choose>
            WHERE
                shop_id = #{item.shop_id}
                AND day_of_week = #{item.day_of_week}
                AND is_deleted = 0
        </foreach>
    </update>

    <update id="deleteShopCategoryMaps" parameterType="list">
        <foreach collection="list" item="item" separator=";">
            UPDATE koin.shop_category_map
            SET is_deleted = 1
            WHERE
                shop_id = #{item.shop_id}
                AND shop_category_id = #{item.shop_category_id}
                AND is_deleted = 0
        </foreach>
    </update>

    <insert id="createShopImages" parameterType="list">
        INSERT INTO koin.shop_images
        (shop_id, image_url)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.shop_id},
                #{item.image_url}
            )
        </foreach>
    </insert>
</mapper>